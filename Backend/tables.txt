-- Drop tables if they exist (use with caution)
DROP TABLE IF EXISTS employees, vendors, customers, personas CASCADE;

-- ✅ Main Personas Table
CREATE TABLE personas (
    id SERIAL PRIMARY KEY,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    phone VARCHAR(20) NOT NULL,
    state VARCHAR(100),
    pin_code VARCHAR(10),
    message TEXT,
    type VARCHAR(50) NOT NULL CHECK (type IN ('Employees', 'Vendors', 'Customers', 'Others')),
    is_favorite BOOLEAN DEFAULT FALSE,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    profile_photo TEXT
);

-- ✅ Employees Table (Linked to Personas)
CREATE TABLE employees (
    id SERIAL PRIMARY KEY,
    persona_id INTEGER NOT NULL UNIQUE,
    date_of_birth DATE,
    father_name VARCHAR(255),
    blood_group VARCHAR(10),
    emergency_contact VARCHAR(50),
    aadhar_number VARCHAR(20) UNIQUE,
    joining_date DATE,
    probation_end_date DATE,
    previous_employer VARCHAR(255),
    FOREIGN KEY (persona_id) REFERENCES personas(id) ON DELETE CASCADE
);


-- ✅ Vendors Table (Linked to Personas)
CREATE TABLE vendors (
    id SERIAL PRIMARY KEY,
    persona_id INTEGER NOT NULL UNIQUE,
    address TEXT NOT NULL,
    pan_number VARCHAR(20) UNIQUE,
    gst_number VARCHAR(20) UNIQUE,
    bank_name VARCHAR(255),
    account_number VARCHAR(50) UNIQUE,
    ifsc_code VARCHAR(20),
    FOREIGN KEY (persona_id) REFERENCES personas(id) ON DELETE CASCADE
);

-- ✅ Customers Table (Linked to Personas)
CREATE TABLE customers (
    id SERIAL PRIMARY KEY,
    persona_id INTEGER NOT NULL UNIQUE,
    age INTEGER CHECK (age > 0),
    location VARCHAR(255),
    job VARCHAR(255),
    income_range VARCHAR(50),
    family_members INTEGER CHECK (family_members >= 0),
    weight NUMERIC(5,2) CHECK (weight > 0),
    speed INTEGER,
    user_type VARCHAR(50),
    wheelchair_type VARCHAR(50),
    commute_range INTEGER CHECK (commute_range >= 0),
    commute_mode VARCHAR(50) CHECK (commute_mode IN ('Public Transport', 'Private Vehicle', 'Taxi/Ride-sharing', 'Walking', 'Wheelchair')),
    pains_daily TEXT,
    pains_commute TEXT,
    solutions_needed TEXT,
    customer_segment VARCHAR(100),
    expected_gain TEXT,
    FOREIGN KEY (persona_id) REFERENCES personas(id) ON DELETE CASCADE
);

CREATE TABLE groups (
    id SERIAL PRIMARY KEY,
    group_name VARCHAR(255) NOT NULL,
    description TEXT,
    members TEXT[] -- Storing multiple members as an array
);